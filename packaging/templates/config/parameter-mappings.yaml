# PiTrac Parameter Mappings
# This file maps user-friendly YAML settings to golf_sim_config.json parameters
# Used by the configuration system to translate between user and technical settings

version: 2.0

mappings:
  # ============================================================================
  # SYSTEM MAPPINGS
  # ============================================================================
  
  system.putting_mode:
    json_path: gs_config.modes.kStartInPuttingMode
    type: boolean
    to_json: |
      value ? "1" : "0"
    from_json: |
      value == "1"
  
  # ============================================================================
  # CAMERA MAPPINGS
  # ============================================================================
  
  cameras.slot1_type:
    env_var: PITRAC_SLOT1_CAMERA_TYPE
    type: integer
    validation:
      min: 1
      max: 5
  
  cameras.slot2_type:
    env_var: PITRAC_SLOT2_CAMERA_TYPE
    type: integer
    validation:
      min: 1
      max: 5
  
  cameras.camera1_gain:
    json_path: gs_config.cameras.kCamera1Gain
    type: float
    validation:
      min: 0.5
      max: 16.0
  
  cameras.camera2_gain:
    json_path: gs_config.cameras.kCamera2Gain
    type: float
    validation:
      min: 0.5
      max: 16.0
  
  # ============================================================================
  # SIMULATOR MAPPINGS
  # ============================================================================
  
  simulators.e6_host:
    json_path: gs_config.golf_simulator_interfaces.E6.kE6ConnectAddress
    cli_flag: --e6-host-address
    type: string
    validation:
      pattern: '^$|^([0-9]{1,3}\.){3}[0-9]{1,3}$'
  
  simulators.e6_port:
    json_path: gs_config.golf_simulator_interfaces.E6.kE6ConnectPort
    type: integer
    to_json: |
      value.toString()
    validation:
      min: 1024
      max: 65535
  
  simulators.gspro_host:
    json_path: gs_config.golf_simulator_interfaces.GSPro.kGSProConnectAddress
    cli_flag: --gspro-host-address
    type: string
    validation:
      pattern: '^$|^([0-9]{1,3}\.){3}[0-9]{1,3}$'
  
  simulators.gspro_port:
    json_path: gs_config.golf_simulator_interfaces.GSPro.kGSProConnectPort
    type: integer
    to_json: |
      value.toString()
    validation:
      min: 1024
      max: 65535
  
  # ============================================================================
  # BALL DETECTION MAPPINGS
  # ============================================================================
  
  ball_detection.method:
    json_path: gs_config.ball_identification.kDetectionMethod
    type: string
    validation:
      enum: [legacy, experimental, experimental_sahi]
  
  ball_detection.use_clahe:
    json_path: gs_config.ball_identification.kUseCLAHEProcessing
    type: boolean
    to_json: |
      value ? "1" : "0"
    from_json: |
      value == "1"
  
  ball_detection.clahe_clip_limit:
    json_path: gs_config.ball_identification.kCLAHEClipLimit
    type: string
    validation:
      min: 1
      max: 40
  
  ball_detection.ball_radius_pixels:
    json_path: gs_config.ball_position.kExpectedBallRadiusPixelsAt40cm
    type: string
    validation:
      min: 50
      max: 200
  
  # ============================================================================
  # ADVANCED BALL DETECTION MAPPINGS
  # ============================================================================
  
  ball_detection_advanced.strobed_balls.canny_lower:
    json_path: gs_config.ball_identification.kStrobedBallsCannyLower
    type: string
    validation:
      min: 0
      max: 255
  
  ball_detection_advanced.strobed_balls.canny_upper:
    json_path: gs_config.ball_identification.kStrobedBallsCannyUpper
    type: string
    validation:
      min: 0
      max: 255
  
  ball_detection_advanced.strobed_balls.min_circles:
    json_path: gs_config.ball_identification.kStrobedBallsMinHoughReturnCircles
    type: string
    validation:
      min: 1
      max: 50
  
  ball_detection_advanced.strobed_balls.max_circles:
    json_path: gs_config.ball_identification.kStrobedBallsMaxHoughReturnCircles
    type: string
    validation:
      min: 1
      max: 100
  
  ball_detection_advanced.strobed_balls.param2.min:
    json_path: gs_config.ball_identification.kStrobedBallsMinParam2
    type: string
    validation:
      min: 1
      max: 200
  
  ball_detection_advanced.strobed_balls.param2.max:
    json_path: gs_config.ball_identification.kStrobedBallsMaxParam2
    type: string
    validation:
      min: 1
      max: 300
  
  ball_detection_advanced.strobed_balls.param2.starting:
    json_path: gs_config.ball_identification.kStrobedBallsStartingParam2
    type: string
  
  ball_detection_advanced.strobed_balls.param2.increment:
    json_path: gs_config.ball_identification.kStrobedBallsParam2Increment
    type: string
    validation:
      min: 0.1
      max: 20
  
  ball_detection_advanced.strobed_balls.param1:
    json_path: gs_config.ball_identification.kStrobedBallsCurrentParam1
    type: string
    validation:
      min: 1
      max: 500
  
  ball_detection_advanced.strobed_balls.dp:
    json_path: gs_config.ball_identification.kStrobedBallsHoughDpParam1
    type: string
    validation:
      min: 0.5
      max: 3.0
  
  ball_detection_advanced.strobed_balls.pre_canny_blur:
    json_path: gs_config.ball_identification.kStrobedBallsPreCannyBlurSize
    type: string
    validation:
      enum: ["1", "3", "5", "7", "9"]
  
  ball_detection_advanced.strobed_balls.pre_hough_blur:
    json_path: gs_config.ball_identification.kStrobedBallsPreHoughBlurSize
    type: string
    validation:
      enum: ["1", "3", "5", "7", "9", "11", "13", "15"]
  
  # Alternative algorithm mappings
  ball_detection_advanced.alternative_algorithm.enabled:
    json_path: gs_config.ball_identification.kStrobedBallsUseAltHoughAlgorithm
    type: boolean
    to_json: |
      value ? "1" : "0"
    from_json: |
      value == "1"
  
  # AI detection mappings
  ai_detection.model_path:
    json_path: gs_config.ball_identification.kONNXModelPath
    type: string
  
  ai_detection.confidence_threshold:
    json_path: gs_config.ball_identification.kONNXConfidenceThreshold
    type: string
    validation:
      min: 0.0
      max: 1.0
  
  ai_detection.nms_threshold:
    json_path: gs_config.ball_identification.kONNXNMSThreshold
    type: string
    validation:
      min: 0.0
      max: 1.0
  
  ai_detection.input_size:
    json_path: gs_config.ball_identification.kONNXInputSize
    type: string
    validation:
      enum: ["640", "1280", "1472"]
  
  # ============================================================================
  # STROBING MAPPINGS
  # ============================================================================
  
  strobing.standard_speed_adjustment:
    json_path: gs_config.strobing.kStandardBallSpeedSlowdownPercentage
    type: string
    validation:
      min: 0.0
      max: 10.0
  
  strobing.practice_speed_adjustment:
    json_path: gs_config.strobing.kPracticeBallSpeedSlowdownPercentage
    type: string
    validation:
      min: 0.0
      max: 20.0
  
  strobing.putting_speed_adjustment:
    json_path: gs_config.strobing.kPuttingBallSpeedSlowdownPercentage
    type: string
    validation:
      min: 0.0
      max: 20.0
  
  # ============================================================================
  # STORAGE MAPPINGS
  # ============================================================================
  
  storage.log_exposure_images:
    json_path: gs_config.logging.kLogIntermediateExposureImagesToFile
    type: boolean
    to_json: |
      value ? "1" : "0"
    from_json: |
      value == "1"
  
  storage.log_spin_images:
    json_path: gs_config.logging.kLogIntermediateSpinImagesToFile
    type: boolean
    to_json: |
      value ? "1" : "0"
    from_json: |
      value == "1"
  
  storage.log_webserver_images:
    json_path: gs_config.logging.kLogWebserverImagesToFile
    type: boolean
    to_json: |
      value ? "1" : "0"
    from_json: |
      value == "1"
  
  storage.unique_diagnostic_files:
    json_path: gs_config.logging.kLogDiagnosticImagesToUniqueFiles
    type: boolean
    to_json: |
      value ? "1" : "0"
    from_json: |
      value == "1"
  
  storage.image_dir:
    json_path: gs_config.logging.kLinuxBaseImageLoggingDir
    cli_flag: --base-image-logging-dir
    type: string
    expand_home: true
  
  storage.web_share_dir:
    json_path: gs_config.user_interface.kWebServerShareDirectory
    cli_flag: --web-server-share-dir
    type: string
    expand_home: true
  
  # ============================================================================
  # NETWORK MAPPINGS
  # ============================================================================
  
  network.broker_address:
    json_path: gs_config.ipc_interface.kWebActiveMQHostAddress
    env_var: PITRAC_MSG_BROKER_FULL_ADDRESS
    cli_flag: --msg-broker-address
    type: string
  
  network.web_refresh_seconds:
    json_path: gs_config.user_interface.kRefreshTimeSeconds
    type: string
    validation:
      min: 1
      max: 60
  
  # ============================================================================
  # SPIN MAPPINGS
  # ============================================================================
  
  spin.skip_calculation:
    json_path: gs_config.golf_simulator_interfaces.kSkipSpinCalculation
    type: boolean
    to_json: |
      value ? "1" : "0"
    from_json: |
      value == "1"
  
  spin.write_csv_files:
    json_path: gs_config.spin_analysis.kWriteSpinAnalysisCsvFiles
    type: boolean
    to_json: |
      value ? "1" : "0"
    from_json: |
      value == "1"

# ============================================================================
# PRESET MAPPINGS
# ============================================================================

presets:
  indoor:
    description: "Optimized for indoor setup with artificial lighting"
    settings:
      ball_detection.use_clahe: true
      ball_detection.clahe_clip_limit: 10
      ball_detection_advanced.strobed_balls.canny_lower: 30
      ball_detection_advanced.strobed_balls.canny_upper: 85
      storage.log_exposure_images: false
      storage.log_spin_images: false
  
  outdoor:
    description: "Optimized for garage/outdoor with natural light"
    settings:
      ball_detection.use_clahe: true
      ball_detection.clahe_clip_limit: 6
      ball_detection_advanced.strobed_balls.canny_lower: 35
      ball_detection_advanced.strobed_balls.canny_upper: 95
      ball_detection_advanced.alternative_algorithm.enabled: true
  
  putting:
    description: "Optimized for putting green"
    settings:
      system.putting_mode: true
      strobing.putting_speed_adjustment: 5.2
      ball_detection_advanced.putting_mode.param1: 300.0
      spin.skip_calculation: true
  
  driver:
    description: "Optimized for high-speed driver shots"
    settings:
      strobing.standard_speed_adjustment: -2.0
      ball_detection_advanced.strobed_balls.max_circles: 30
      exposure_selection.high_quality_balls: 3
      exposure_selection.max_balls: 40
  
  debug:
    description: "Enable all diagnostic logging for troubleshooting"
    settings:
      storage.log_exposure_images: true
      storage.log_spin_images: true
      storage.log_webserver_images: true
      storage.unique_diagnostic_files: true
      spin.write_csv_files: true