# OpenCV 4.11.0 Builder
FROM --platform=linux/arm64 debian:bookworm-slim

RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    wget \
    unzip \
    zlib1g-dev \
    libgtk-3-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    gfortran \
    openexr \
    libatlas-base-dev \
    python3-dev \
    python3-numpy \
    libtbb-dev \
    libdc1394-dev \
    libopenexr-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer1.0-dev \
    # Additional deps from main Dockerfile.build
    libglu1-mesa-dev \
    libgl1-mesa-dev \
    # Cleanup
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /build

# Download OpenCV and contrib
RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/4.11.0.zip && \
    wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.11.0.zip && \
    unzip opencv.zip && \
    unzip opencv_contrib.zip && \
    rm opencv.zip opencv_contrib.zip

# Build OpenCV with proper configuration for PiTrac and YOLO v8n support
# Fix zlib issue by using system libraries and proper paths
RUN cd opencv-4.11.0 && \
    mkdir build && cd build && \
    # Set pkg-config to find system libraries \
    export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/opt/opencv \
          -D WITH_TBB=ON \
          -D WITH_V4L=ON \
          -D WITH_LIBV4L=ON \
          -D WITH_OPENGL=ON \
          -D WITH_FFMPEG=ON \
          -D BUILD_TESTS=OFF \
          -D BUILD_PERF_TESTS=OFF \
          -D BUILD_EXAMPLES=OFF \
          -D BUILD_DOCS=OFF \
          -D WITH_PNG=ON \
          -D WITH_JPEG=ON \
          -D WITH_TIFF=OFF \
          -D BUILD_PNG=OFF \
          -D BUILD_JPEG=OFF \
          -D BUILD_TIFF=OFF \
          -D BUILD_ZLIB=OFF \
          -D BUILD_JASPER=OFF \
          -D BUILD_WEBP=OFF \
          -D BUILD_OPENEXR=OFF \
          -D ZLIB_LIBRARY=/usr/lib/aarch64-linux-gnu/libz.so \
          -D ZLIB_INCLUDE_DIR=/usr/include \
          -D PNG_LIBRARY=/usr/lib/aarch64-linux-gnu/libpng.so \
          -D PNG_PNG_INCLUDE_DIR=/usr/include \
          -D JPEG_LIBRARY=/usr/lib/aarch64-linux-gnu/libjpeg.so \
          -D JPEG_INCLUDE_DIR=/usr/include \
          -D BUILD_opencv_python2=OFF \
          -D BUILD_opencv_python3=OFF \
          -D BUILD_opencv_java=OFF \
          -D BUILD_opencv_apps=OFF \
          -D BUILD_opencv_js=OFF \
          -D BUILD_LIST=core,imgproc,imgcodecs,calib3d,features2d,highgui,videoio,photo,dnn,objdetect \
          -D BUILD_SHARED_LIBS=ON \
          -D OPENCV_ENABLE_NONFREE=ON \
          -D OPENCV_DNN_OPENCL=ON \
          -D BUILD_PROTOBUF=ON \
          -D WITH_PROTOBUF=ON \
          -D OPENCV_DNN_SUPPORT_ONNX=ON \
          .. && \
    make -j$(nproc) && \
    make install

# Create pkg-config file for OpenCV 4
RUN mkdir -p /opt/opencv/lib/pkgconfig && \
    echo 'prefix=/opt/opencv' > /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo 'exec_prefix=${prefix}' >> /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo 'libdir=${exec_prefix}/lib' >> /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo 'includedir=${prefix}/include/opencv4' >> /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo '' >> /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo 'Name: OpenCV' >> /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo 'Description: Open Source Computer Vision Library' >> /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo 'Version: 4.11.0' >> /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo 'Libs: -L${libdir} -lopencv_highgui -lopencv_objdetect -lopencv_photo -lopencv_calib3d -lopencv_features2d -lopencv_flann -lopencv_videoio -lopencv_imgcodecs -lopencv_imgproc -lopencv_core -lopencv_dnn' >> /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo 'Libs.private: -ldl -lm -lpthread -lrt' >> /opt/opencv/lib/pkgconfig/opencv4.pc && \
    echo 'Cflags: -I${includedir}' >> /opt/opencv/lib/pkgconfig/opencv4.pc

# Create artifact with libraries, headers, and pkg-config
RUN cd /opt && \
    tar czf /opencv-4.11.0-arm64.tar.gz opencv/ && \
    echo "OpenCV artifact created: $(du -h /opencv-4.11.0-arm64.tar.gz)"

# Generate metadata
RUN echo "OpenCV 4.11.0 ARM64 Build" > /opencv-metadata.txt && \
    echo "Build Date: $(date)" >> /opencv-metadata.txt && \
    echo "Architecture: $(uname -m)" >> /opencv-metadata.txt && \
    echo "Debian Version: bookworm" >> /opencv-metadata.txt && \
    md5sum /opencv-4.11.0-arm64.tar.gz >> /opencv-metadata.txt

# Default command outputs the artifact
CMD ["sh", "-c", "cat /opencv-4.11.0-arm64.tar.gz"]