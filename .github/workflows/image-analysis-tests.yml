---
name: Image Analysis Tests
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
env:
  BOOST_VERSION: 1.84.0
  BOOST_ROOT: C:\Dev_Env\boost
  OPENCV_DIR: C:\tools\opencv
jobs:
  camera-tests:
    name: Image Analysis Tests
    runs-on: windows-latest
    defaults:
      run:
        working-directory: Software/LMSourceCode/ImageProcessing/ImageAnalysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4   

      - name: Cache OpenCV
        uses: actions/cache@v3
        with:
          path: ${{ env.OPENCV_DIR }}
          key: ${{ runner.os }}-opencv-4.10.0-binaries
          restore-keys: |
            ${{ runner.os }}-opencv-4.10.0-

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: "3.20"

      - name: Install OpenCV
        run: |
          if (-not (Test-Path "$env:OPENCV_DIR")) {
            Write-Host "Installing OpenCV 4.10.0..."
            $url = "https://github.com/opencv/opencv/releases/download/4.10.0/opencv-4.10.0-windows.exe"
            Invoke-WebRequest -Uri $url -OutFile "opencv.exe"
            Start-Process -FilePath "opencv.exe" -ArgumentList "-o", "$env:OPENCV_DIR", "-y" -Wait
            Remove-Item "opencv.exe"
            Write-Host "✓ OpenCV installed at $env:OPENCV_DIR"
          } else {
            Write-Host "✓ OpenCV found in cache"
          }
        shell: pwsh

      - name: Install boost
        uses: MarkusJx/install-boost@v2
        with:
          boost_version: ${{ env.BOOST_VERSION }}
          boost_install_dir: C:\Dev_Env\
          platform_version: 2022
          toolset: msvc
          
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64      

      - name: Configure CMake
        run: |
          if (Test-Path build) { Remove-Item build -Recurse -Force }
          mkdir build
          Write-Host "Configuring CMake..."
          
          # Set the correct OpenCV configuration path with build subdirectory
          # This should be the directory that contains OpenCVConfig.cmake
          $OpenCVConfigPath = "$env:OPENCV_DIR\build"
          Write-Host "Setting OPENCV_DIR to: $OpenCVConfigPath"
          
          # Check if OpenCVConfig.cmake exists and list directory contents if it doesn't
          $ConfigFile = Join-Path $OpenCVConfigPath "OpenCVConfig.cmake"
          if (-not (Test-Path $ConfigFile)) {
            Write-Host "⚠️ WARNING: OpenCVConfig.cmake not found at $ConfigFile" -ForegroundColor Yellow
            Write-Host "Listing contents of $env:OPENCV_DIR..."
            Get-ChildItem -Path $env:OPENCV_DIR -Recurse -Depth 1 | Select-Object FullName
            
            if (Test-Path "$env:OPENCV_DIR\build") {
              Write-Host "Listing contents of $env:OPENCV_DIR\build..."
              Get-ChildItem -Path "$env:OPENCV_DIR\build" -Recurse -Depth 1 | Select-Object FullName
            }
          } else {
            Write-Host "✓ Found OpenCVConfig.cmake at $ConfigFile" -ForegroundColor Green
          }
          
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DOPENCV_DIR="$OpenCVConfigPath"
        shell: pwsh
        
      - name: Build and Test
        run: |
          pushd build
          cmake --build . --config Release
          ctest -C Release --output-on-failure
          popd
        shell: pwsh
