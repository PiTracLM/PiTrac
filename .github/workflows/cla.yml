---
name: "CLA Assistant"

on:
  issue_comment:
    types: [created]
  pull_request_target:
    types: [opened, synchronize, reopened, closed]

permissions:
  actions: write
  contents: read
  pull-requests: write
  statuses: write

concurrency:
  group: cla-assistant-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  cla-assistant:
    runs-on: ubuntu-latest
 
    env:
      SIGNATURE_PHRASE: "I have read the CLA Document and I hereby sign the CLA"
      RECHECK_PHRASE: "recheck"
      PATH_TO-DOCUMENT: "https://gist.github.com/jamespilgrim/e6996a438adc0919ebbe70561efbb600#file-verdant-contributor-license-agreement-md"

    steps:
      - name: "CLA Assistant"
        if: >
          (github.event.comment.body == 'recheck' ||
          github.event.comment.body == 'I have read the CLA Document and I hereby sign the CLA') ||
          github.event_name == 'pull_request_target'
        uses: contributor-assistant/github-action@v2.6.1
        env:
          # Built-in token for commenting on the PR and setting statuses in PiTrac
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Fine-grained / classic PAT that can write to PitracCLASignatures
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          path-to-document: "https://gist.github.com/jamespilgrim/e6996a438adc0919ebbe70561efbb600#file-verdant-contributor-license-agreement-md"
          path-to-signatures: "signatures/version1/cla.json"

          remote-organization-name: "PiTracLM"
          remote-repository-name: "PitracCLASignatures"

          branch: "main"

          allowlist: "dependabot[bot],github-actions[bot]"

          # lock-pullrequest-aftermerge: true

          create-file-commit-message: "Create signatures store"
          signed-commit-message: "$contributorName has signed the CLA in $owner/$repo#$pullRequestNo"

          custom-notsigned-prcomment: |
            Thanks for your PR! Before we can review it, please sign our Contributor License Agreement.

            **How to sign (right here in this PR):**
            1. Read the CLA: ${{ env.PATH_TO_DOCUMENT }}
            2. Add a new PR comment with exactly this line (copy & paste):
               ```
               ${{ env.SIGNATURE_PHRASE }}
               ```
            3. Already signed and not seeing the check pass? Ask me to recheck by commenting:
               ```
               ${{ env.RECHECK_PHRASE }}
               ```

          custom-pr-sign-comment: ${{ env.SIGNATURE_PHRASE }}

          custom-allsigned-prcomment: "All contributors have signed the CLA. Thanks!"

          suggest-recheck: true
